@using System.ComponentModel.DataAnnotations

@page "/inputAutocomplete"
@inherits ComponentBase

<TitleBlock Title="Input Autocomplete Test" />

<div class="columns p-3">
    <div class="column is-4">
        <Message Title="Information" Color="BulmaColors.Cyan">
            <p class="block">Note that the Input Autocomplete component supports keyboard navigation using the following keys:</p>
            <div class="content">
                <ul class="content">
                    <li>Up Arrow</li>
                    <li>Down Arrow</li>
                    <li>Left Arrow</li>
                    <li>Right Arrow</li>
                    <li>Tab</li>
                    <li>Enter</li>
                    <li>Esc</li>
                </ul>
            </div>

            <p class="block">There are several additional attributes that can apply customization to the component:</p>
            <div class="content">
                <ul class="content">
                    <li>dropdown-class</li>
                    <li>dropdown-trigger-class</li>
                    <li>dropdown-menu-class</li>
                    <li>dropdown-item-class</li>
                    <li>tag-class</li>
                </ul>
            </div>

            <p class="block">The first input displays a generic implementation.</p>
            <p class="block">The second input displays a more customized implementation. By using the OnItemsRequested method, the collection can be filtered before the value gets changed. In this case, typing More will add a new element to the list and typing Less will remove an element from the list.</p>
        </Message>
    </div>
    <div class="column is-8">
        <EditForm Model="InputModel" OnSubmit="OnSubmit">
            <div class="field">
                <Label For="() => InputModel.SelectedItem1" TooltipMode="TooltipDisplayMode" />
                <div class="control has-icons-left is-expanded">
                    <InputAutocomplete dropdown-class="is-fullwidth" @bind-Value="InputModel.SelectedItem1" DisplayValue='x => x.Name' DisplayFilter='(x, y) => x.Name.StartsWith(y, StringComparison.OrdinalIgnoreCase)' Items="AllItems" />
                </div>
            </div>
            <div class="field">
                <Label For="() => InputModel.SelectedItem2" TooltipMode="TooltipDisplayMode" />
                <div class="control has-icons-left is-expanded">
                    <InputAutocomplete dropdown-class="is-fullwidth" tag-class="is-warning" @bind-Value="InputModel.SelectedItem2" DisplayValue='x => x?.Name' Items="GetAutocompleteItems()" OnItemsRequested=OnItemsRequested DisplayCount="5" Options="Options2" />
                </div>
            </div>
            <div class="field">
                <Label For="() => InputModel.SelectedItem3" TooltipMode="TooltipDisplayMode" />
                <div class="control has-icons-left is-expanded">
                    <InputAutocomplete dropdown-class="is-fullwidth" @bind-Value="InputModel.SelectedItem3" DisplayValue='x => x?.Name' DisplayFilter='(x, y) => x != null && x.Name.StartsWith(y, StringComparison.OrdinalIgnoreCase)' Items="AllItems" DisplayCount="5" Options="Options3" />
                </div>
            </div>
        </EditForm>

        <Message class="mt-3" Title="New Hires" Color="BulmaColors.Green">
            <div class="columns">
                <div class="column">
                    <p class="block">The person to be hired for the Janitor position is:</p>
                    <div class="content">
                        <ul>
                            <li>Name: @InputModel.SelectedItem1?.Name</li>
                            <li>Age: @InputModel.SelectedItem1?.Age</li>
                            <li>Profession: @InputModel.SelectedItem1?.Position</li>
                        </ul>
                    </div>
                </div>
                <div class="column">
                    <p class="block">The person to be hired for the Accountant position is:</p>
                    <div class="content">
                        <ul>
                            <li>Name: @InputModel.SelectedItem2?.Name</li>
                            <li>Age: @InputModel.SelectedItem2?.Age</li>
                            <li>Profession: @InputModel.SelectedItem2?.Position</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="content">
                <p class="block">@SubmitMessage</p>
            </div>
        </Message>
    </div>
</div>
