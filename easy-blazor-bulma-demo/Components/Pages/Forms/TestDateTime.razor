@using System.ComponentModel.DataAnnotations

@page "/inputDateTime"
@inherits ComponentBase

<TitleBlock Title="Input Date Time Test" />

<div class="columns p-3">
	<div class="column is-4">
		<Message Title="Information" Color="BulmaColors.Cyan">
			<p class="block">There are several additional attributes that can apply customization to the component:</p>
			<div class="content">
				<ul class="content">
					<li>datetimepicker-class</li>
					<li>icon-class</li>
				</ul>
			</div>
		</Message>
	</div>
	<div class="column is-8">
		<EditForm Model="InputModel">
			<div class="field">
				<Label For="() => InputModel.DateTimeTest" TooltipMode="TooltipDisplayMode" />
				<div class="control has-icons-left has-icons-right">
					<InputDateTime @bind-Value=InputModel.DateTimeTest StartOfWeek="DayOfWeek.Monday" />
				</div>
			</div>
			<div class="field">
				<Label For="() => InputModel.DateOnlyTest" TooltipMode="TooltipDisplayMode" />
				<div class="control has-icons-left has-icons-right">
					<InputDateTime @bind-Value=InputModel.DateOnlyTest Options="DateOnlyOptions" />
				</div>
			</div>
			<div class="field">
				<Label For="() => InputModel.FullDateTest" TooltipMode="TooltipDisplayMode" />
				<div class="control has-icons-left has-icons-right">
					<InputDateTime @bind-Value=InputModel.FullDateTest Options="DateBelowOptions" />
				</div>
			</div>
		</EditForm>
	</div>
</div>

@code {
	private readonly PageModel InputModel = new();

	private readonly InputDateTimeOptions DateOnlyOptions = InputDateTimeOptions.HoverPopout |
		InputDateTimeOptions.ShowResetButton |
		InputDateTimeOptions.ShowDate |
		InputDateTimeOptions.CloseOnDateClicked;

	private readonly InputDateTimeOptions DateBelowOptions = InputDateTimeOptions.ClickPopout |
		InputDateTimeOptions.PopoutBottom |
		InputDateTimeOptions.PopoutLeft |
		InputDateTimeOptions.ShowNowButton |
		InputDateTimeOptions.ShowResetButton |
		InputDateTimeOptions.UpdateOnPopoutChange |
		InputDateTimeOptions.UseAutomaticStatusColors |
		InputDateTimeOptions.ShowDate |
		InputDateTimeOptions.ShowHours |
		InputDateTimeOptions.ShowMinutes |
		InputDateTimeOptions.CloseOnDateClicked |
		InputDateTimeOptions.ValidateTextInput |
		InputDateTimeOptions.ShowFullValueBelow;

	private readonly TooltipOptions TooltipDisplayMode = TooltipOptions.Right | TooltipOptions.HasArrow | TooltipOptions.Multiline;

	private class PageModel
	{
		[Display(Name = "Date Time Test", Description = "Input to test a non-nullable DateTime value.")]
		public DateTime DateTimeTest { get; set; } = DateTime.Now;

		[Display(Name = "Date Only Test", Description = "Input to test a nullable DateOnly value.")]
		public DateOnly? DateOnlyTest { get; set; }

		[Display(Name = "Full Date Test", Description = "Input to display the full DateTime below the input.")]
		public DateTime? FullDateTest { get; set; }
	}
}
