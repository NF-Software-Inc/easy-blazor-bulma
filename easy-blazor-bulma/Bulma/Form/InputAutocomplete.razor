@namespace easy_blazor_bulma
@typeparam TValue
@inherits InputBase<TValue>

<div class='@DropDownCssClass'>
	<div class='@DropDownTriggerCssClass'>
		<input type="search" class='@MainCssClass' placeholder="Search..." autocomplete="off" @bind-value='@InputValue' @oninput='OnInput' @onclick='OnClick' @onfocus='OnFocus' @onblur='OnBlur' @onkeydown='OnKeyDown' @onkeydown:preventDefault="OnKeyDownPreventDefault" @onkeyup='OnKeyUp' @ref=Element @attributes='AdditionalAttributes.GetFilteredAttributes(Filter)' />

		@if (string.IsNullOrWhiteSpace(Icon) == false)
		{
			<span class="material-icons icon is-left">@Icon</span>
		}
	</div>
	<div class='@DropDownMenuCssClass'>
		<div class="dropdown-content">
			@foreach (var item in Items.Take(DisplayCount ?? int.MaxValue))
			{
				<div class='@GetDropDownItemCssClass(item)' @onmousedown='OnMouseDown' @onmouseup='OnMouseUp' @onclick='x => OnItemSelected(item)'>@DisplayValue(item)</div>
			}
		</div>
	</div>
</div>

@if (CurrentValue != null)
{
	<span class='@TagCssClass'>
		@DisplayValue(CurrentValue)
		@if (IsNullable)
		{
			<button class="delete is-small" @onclick='() => OnItemSelected(default)'></button>
		}
	</span>
}
