# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: publish-windows
on:
  workflow_call:
    inputs:
      architecture:
        required: true
        type: string
      build:
        required: true
        type: string
      version:
        required: true
        type: string

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  GitHubUsername: NF-Software-Inc
  PublishVersion: ${{ inputs.version }}.${{ inputs.build }}
  TempDirectory: ${{ github.workspace }}\Temp-Windows-${{ inputs.architecture }}

jobs:
  publish:
    name: Publish Easy Blazor Bulma Windows ${{ inputs.architecture }}
    runs-on: windows-2022
    defaults:
      run:
        shell: pwsh
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup .NET
      uses: actions/setup-dotnet@v4.3.1
      with:
        dotnet-version: |
          9.0.x
          8.0.x
          6.0.x
    - name: Install MAUI
      run: dotnet workload install maui-windows
      working-directory: .\easy-blazor-bulma-demo
    - run: New-Item -Type Directory -Path ${{ env.TempDirectory }}
    - name: Set Environment Variables
      run: |
        if ("${{ inputs.architecture }}" -eq "arm64") {
          echo "BUILD_ARGUMENTS=-p:AssemblyVersion=${{ env.PublishVersion }} -p:Version=${{ inputs.version }} -p:FileVersion=${{ env.PublishVersion }} -p:ApplicationVersion=${{ inputs.build }} -p:ApplicationDisplayVersion=${{ inputs.version }} -p:UseMonoRuntime=false -p:Platform=Arm64" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "PUBLISH_DIRECTORY=${{ github.workspace }}\easy-blazor-bulma-demo\bin\Arm64\Release\net9.0-windows10.0.19041.0\win-arm64\AppPackages\Easy-Blazor-Bulma-Demo_${{ inputs.version }}.0_Test" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        } else {
          echo "BUILD_ARGUMENTS=-p:AssemblyVersion=${{ env.PublishVersion }} -p:Version=${{ inputs.version }} -p:FileVersion=${{ env.PublishVersion }} -p:ApplicationVersion=${{ inputs.build }} -p:ApplicationDisplayVersion=${{ inputs.version }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "PUBLISH_DIRECTORY=${{ github.workspace }}\easy-blazor-bulma-demo\bin\Release\net9.0-windows10.0.19041.0\win-x64\AppPackages\Easy-Blazor-Bulma-Demo_${{ inputs.version }}.0_Test" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        }
    - name: Save Certificates
      run: |
        New-Item -Type File -Path ${{ env.TempDirectory }}\public.cer -Value "${{ vars.GLOBALSIGN_PUBLIC }}"
        New-Item -Type File -Path ${{ env.TempDirectory }}\intermediate-1.cer -Value "${{ vars.GLOBALSIGN_INTERMEDIATE_1 }}"
        New-Item -Type File -Path ${{ env.TempDirectory }}\intermediate-2.cer -Value "${{ vars.GLOBALSIGN_INTERMEDIATE_2 }}"
    - name: Update Manifest
      run: |
        $certificate = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2 '${{ env.TempDirectory }}\public.cer'
        $xml = [Xml] (Get-Content '${{ github.workspace }}\easy-blazor-bulma-demo\Platforms\Windows\Package.appxmanifest')
        $xml.Package.Identity.Publisher = $certificate.Subject
        $xml.Package.Identity.Version = '${{ inputs.version }}.0'
        $xml.Package.Properties.PublisherDisplayName = $certificate.Subject -replace "(CN=)(.*?),.*", '$2'
        $xml.Save('${{ github.workspace }}\easy-blazor-bulma-demo\Platforms\Windows\Package.appxmanifest')
    - name: Publish
      run: dotnet publish -c Release -r win-${{ inputs.architecture }} -f net9.0-windows10.0.19041.0 ${{ env.BUILD_ARGUMENTS }}
      working-directory: .\easy-blazor-bulma-demo
    - name: Sign Package
      run: |
        dotnet tool install --global --version 6.0.1 AzureSignTool
        AzureSignTool.exe sign -fd sha256 -td sha256 -tr http://timestamp.sectigo.com -kvu ${{ vars.AZURE_KEY_VAULT }} -kvt ${{ secrets.AZURE_TENANT_ID }} -kvi ${{ secrets.AZURE_CLIENT_ID }} -kvs "${{ secrets.AZURE_CLIENT_SECRET }}" -kvc ${{ vars.AZURE_CODE_SIGN_CERTIFICATE }} -ac ${{ env.TempDirectory }}\intermediate-1.cer -ac ${{ env.TempDirectory }}\intermediate-2.cer -ifl ${{ env.PUBLISH_DIRECTORY }}\Easy-Blazor-Bulma-Demo_${{ github.event.release.tag_name }}.0_${{ inputs.architecture }}.msix
        Copy-Item '${{ env.TempDirectory }}\public.cer' -Destination '${{ env.PUBLISH_DIRECTORY }}\Easy-Blazor-Bulma-Demo_${{ inputs.version }}.0_${{ inputs.architecture }}.cer'
    - name: Add to Release
      run: gh release upload ${{ inputs.version }} ${{ env.PUBLISH_DIRECTORY }}\Easy-Blazor-Bulma-Demo_${{ inputs.version }}.0_${{ inputs.architecture }}.msix
    - uses: actions/upload-artifact@v4.6.2
      with:
        name: easy-blazor-bulma-demo-windows-${{ inputs.architecture }}
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.PUBLISH_DIRECTORY }}\*
